

State Evaluation:
  * type state = 
    (map * structs * deck * discard * robber) * player list * turn * next
    + map: I probably don't need to assign any value to the map, since it
      doesn't change throughout the game. But I will want to use the map
      (along with the robber's position) when evaluating structures.
    + settlements (part of structures)
      - All the settlements are stored in a list so it might make
        sense to do a fold operation (the accumulator would probably be a tuple
        --maybe a record, though, that'll be a pain to rebuild--consisting of
        the number of intersections processed--which tells you where the the 
        next interesection is located on the board--along with scores for each
        player).
      - The fold function might look at a particular settlement (and reference
        the accumulator to find its location) and figure out whether its been
        developed. If not, you can move on to the next entry. Otherwise, look
        at the color, the type of settlement, and the adjacent tiles (call
        adjacent_pieces on the accumulator [well, sort of--you might need to
        do some additional computation]). The color dictates who will receive
        points for the settlement, while the settlement type and adjacent tiles
        will determine its value.
      - settlement evaluation: I think the easiest thing to do is automatically
        add one point if the settlement is a Town and two points if the 
        settlement is a City. Then you can add 
          (roll_probability 
           *. average_remaining_turns *. value_of_resource_produced 
           *. amount_of_resources_produced) to the score. 
        ~ As a side note, I might not need to use average_remaining_turns. I
          might be able to calculate max_turns - completed_turns.
        ~ Anothere note: I'll want to factor in the robber's presence when
          computing the value of a settlement. This might be a course heuristic,
          but maybe I could pretend that the robber never moves, and that all
          resources generated by a tile will be stolen by a robber.
        ~ And another note: should I worry about ports?
    + roads: I'm not really sure how to value these. 
      - They have value in the sense that they move you towards the longest 
        road trophy, but I think I'll factor that in when I'm looking at the
        players.
      - The only other value I can think of is their ability to block oponents 
        from expanding, but I have no idea how to quanitify that.
    + deck: I don't think I need to do any evaluation here.
      - Later, when I'm figuring out whether to buy cards, I'll try to guess
        what's in the deck (by looking at the discard pile and my hand).
        That'll give a rough value to the cards, and help me choose between
        investing in settlements or buying cards.
    + discard: no evaluation
    + robber: I'll do robber evaluation in structures.
    + inventory (player list): 
      - create a function that evaluates resources
        and call it on the player's inventory. 
      - Also levy a penalty on inventory's larger than (and maybe equal to)
        cMAX_HAND_SIZE. I'm not sure exactly what the penalty will be, but maybe
        what they would sacrifice if they were hit by the robber? In truth, the
        amount that they would expect to lose would be about half those 
        resources (since there's around a 50% chance that the robber is rolled
        during the course of 4-person round), but I can't think of a good reason
        to risk being hit by the robber.
    + cards (player list)
      - knights: I'm not quite sure how to value these. Maybe a reasonable
        approach is to value them equal to the max of 
        (resource_i*p(getting resource_i)). That way using knights to pick up
        resources is considered just as good as holding on to them. Alternately,
        I may want to value them slightly more than that, so that players are
        inclined to hold on to them until they need to move the robber or 
        are in reach of getting the largest army trophy.
      - victory points: add directly to your score
      - road building: I'm not really sure, I suppose I'd give these a value
        that's slightly smaller than two roads to encourage building.
      - year of plenty: Maybe slightly less than the value of the best reources
        they could claim--that should cause players to claim the resources 
        (except, perhaps in cases where they would risk losing resources to the
        robber). Or it might be better to wait to claim resources until they
        have a use for them. So maybe I should give them a slightly greater
        value than what the player would get from claiming the cards immediately.
      - Monopoly: Maybe I'd use the same scheme as year of plenty. I'd guess
        that players resources would grow as the game goes--maybe there'd be
        a few drops, but in general it should increase until they reach around
        5 or 6 resources, and then hover around 5 or 6.
    + trophies (player list): I think I'll just ignore knights and give players
      2 points for each trophy they have.
    + turn/next: I can't think of any way these variables make a state more 
      "good". Maybe you could make the case for some rolls being better than 
      others, but I don't see how players would have any ability to impact the
      dice roll. So I'm going to ignore it.

Resource Evaluation:
  * Big Idea: tie the value of resources to
    i) what those resources can buy
      + for example, 1 B, 1 L, 1 G, and 1 W can buy you a settlement, which
        independent of placement in worth 1 victory point. 
      + I probably should make exceptions for cases where you can't buy any
        more settlements--in those cases, this exchange shouldn't count towards
        the value of B, L, G, or W.
    ii) the opportunity cost of resources. For example, if you don't have 
        access to lumber, the cheapest way to get an individual unit of lumber
        is to buy it from a port (things get nastier when you are interested
        in many units of lumber--in those cases, it may be cheaper to expand
        [i.e. bulding a settlement next to a city or a port with favorable
        exhange rates]. Though, with expansion you're not guaranteed the
        resources. You might be able to make decisions based off the expected
        return on those settlements, but I'm not in love with that idea)
    iii) how much your opponents value the resources (basically, calculate
         the opportunity costs of your resources for your opponents. You could
         viably offer a good trade that way...) actually, maybe this is a bad
         idea. The first two points might be good enough.
  * Maybe I'd return a function. Nah, let's just return a tuple or record. 
    Let's do a record.
  * To figure out the value of resources in terms of what they can buy, I
    think I'm going to limit the value of goods to the number of victory points
    they immediately generate. So,
      + Roads have a value of 0 (or maybe a constant called cROAD_VALUE)
      + Towns have a value of 1 (cVP_TOWN)
      + Cities have a value of 1 (they only increase your victory points by 1)
        (cVP_CITY - cVP_TOWN)
      + Cards have a value equal to likelihood of getting a victory point card
        times the value of victory point cards (cVP_Card).


Random Ideas:
  * It may be worthwhile to only play knights when a robber is next to one of
    your cities.
    + Of course, if you can earn the largest army trophy (which in turn lets 
      you win the game), its worthwhile to play the knight card then, too.

  * Try to place settlements on interesections with a total "dot count" of 
    11-13 (i.e. place the settlement so that the tiles surrounding it add up
    to 11-13).
    + A variety of resources matters, too.

  * If you draw a monopoly card, it might make sense to do a bunch of trades
    where you give up only one type of resource. Then you can recalim all of
    those resources using the monopoly card. 